
1) сделать рендеринг getData в таблицу datatables. Для создания БД скрипт - newDB. Заполнить тестовыми данными newDBtest. getData в файле selects.sql.
2) сделать аутефинкацию пользователей. При захоже на сайт нужно ввести логин и пароль, если куки уже есть, то вводить не надо. 
3) каждый объект класса User должен автоматически записывать каждое действие в таблицу userActionHistory
4) заботать phpUnit. написать тесты на не тривиальную функциональность. (низкий приоритет)

Прим. Dao для userDao, invoiceDao - update,  обертка для select

17.11.2015
Сергей:
1) сделать форму авторизации
2) настроить внешний вид таблицы
3) кастомизировать select для возможности сортировки
4) сделать таблицу сопоставления ролей пользователей и статусов накладной, которые они могут проставлять.
максимальное количество выводимых записей, номер страницы, параметры сортировки(имя столбца и направление сортировки). разоюраться с параметрами в Datatables
5) Программа парсер 1С.

Андрей:
1) продумать способ хранения данных сессии, что должно храниться в куках, а что на серваке. Хранить в куках - направление сортировки для каждого столбца, также хранить набор отображаемых столбцов, также хранить фильтр для каждого столбца. Хранить максимальное количесвто отбражаемых записей на странице.
Datatables может хранить все данные связанные о своей работой между обновлениями старницы. хранится всё либо в куках, либо в локальном хранилище.
2) добавить возможность изменения статуса пользователем, учесть, что для разных ролей пользователей этот список может быть разным.
Добавлять также эту информацию в таблицу user_action_history.
3) по invoiceID получить историю статусов накладной.

	

ВЛада:
1) Справочник подразделений.
2)справочник пользователей.
3)справочник маршрутов и тарифов.
4)инструкции
5)

01.12.2015

Андрей:
сделать синхронное изменение статуса накладной. синхронизация с сервером по успеху sql update.
групповое изменение статусов через маршрутный лист.
доработать ответ сервера на "большой" select

Сергей:
сделать набор параметров для "большого" select
написать генератор insertов

04.12.2015
Статусы накладных отображать русским языком
скрыть окно с глобальным поиском
передалать формат передаваемых данных в объектный. передавать сопуствующие данные - ID маршрутного листа
добавить поле "введенное время" в таблицу invoice_history

07.12.2015
user из destinationPoint должен видеть складские статусы по своей заявке
нужно делать проверку на то, чтобы нельзя было внести время прибытия в новый пункт равным или меньше предыдущего, часовые пояса.! 

15.12.2015
1. Выводить пользователя, пункт и его роль
2. Сброс фильтров
3. Одному клиент-менеджеру должно соответствовать несколько пунктов (набор его торговых точек)
4. Если маршрутный лист пустой, то не должны меняться статусы маршрутного листа (только накладной)
5. Добавить русские имена статусов в БД.
6. Добавить комментарий при проставлении статуса накладной.
7. добавить кнопку "история статусов" по нажатию - отображать всплывающее окно в котором находится история статусов.

19.12.2015
- 1. Добавить ввод количества паллет при изменении статуса маршрутного листа
+ 2. Во всплывающем окне "История накладной" необходимо добавить названия столбцов
+ 3. Отображать историю статусов в табличном виде
По админке:
Добавить создание расписаний

выпадающий список с возможностью поиска по строкам из направлений(directionName from routes)
S_o  Point     arrivalTime  tLoading  timeToNextPoint distanceToNextPoint 
0    w_point   setByUser    setByUser setByUser       setByUser
1    any_point calculate    setByUser setByUser       setByUser
2    any_point calculate    setByUser setByUser       setByUser
..   any_point calculate    setByUser setByUser       setByUser
n    any_point calculate    setByUser setByUser       setByUser
кнопка сохранить

21.12.2015 
Из описания выше неясно, как должен выглядеть функционал для пользователя, потому предлагаю актуализировать файл GUI.odt - нарисовать желаемый интерфейс и добавить по возможности приблизительное описание действий на странице.







