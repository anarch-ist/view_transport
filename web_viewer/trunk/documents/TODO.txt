
1) сделать рендеринг getData в таблицу datatables. Для создания БД скрипт - newDB. Заполнить тестовыми данными newDBtest. getData в файле selects.sql.
2) сделать аутефинкацию пользователей. При захоже на сайт нужно ввести логин и пароль, если куки уже есть, то вводить не надо. 
3) каждый объект класса User должен автоматически записывать каждое действие в таблицу userActionHistory
4) заботать phpUnit. написать тесты на не тривиальную функциональность. (низкий приоритет)

Прим. Dao для userDao, invoiceDao - update,  обертка для select

17.11.2015
Сергей:
1) сделать форму авторизации
2) настроить внешний вид таблицы
3) кастомизировать select для возможности сортировки
4) сделать таблицу сопоставления ролей пользователей и статусов накладной, которые они могут проставлять.
максимальное количество выводимых записей, номер страницы, параметры сортировки(имя столбца и направление сортировки). разоюраться с параметрами в Datatables
5) Программа парсер 1С.

Андрей:
1) продумать способ хранения данных сессии, что должно храниться в куках, а что на серваке. Хранить в куках - направление сортировки для каждого столбца, также хранить набор отображаемых столбцов, также хранить фильтр для каждого столбца. Хранить максимальное количесвто отбражаемых записей на странице.
Datatables может хранить все данные связанные о своей работой между обновлениями старницы. хранится всё либо в куках, либо в локальном хранилище.
2) добавить возможность изменения статуса пользователем, учесть, что для разных ролей пользователей этот список может быть разным.
Добавлять также эту информацию в таблицу user_action_history.
3) по invoiceID получить историю статусов накладной.

	

ВЛада:
1) Справочник подразделений.
2)справочник пользователей.
3)справочник маршрутов и тарифов.
4)инструкции
5)

01.12.2015

Андрей:
сделать синхронное изменение статуса накладной. синхронизация с сервером по успеху sql update.
групповое изменение статусов через маршрутный лист.
доработать ответ сервера на "большой" select

Сергей:
сделать набор параметров для "большого" select
написать генератор insertов

04.12.2015
Статусы накладных отображать русским языком
скрыть окно с глобальным поиском
передалать формат передаваемых данных в объектный. передавать сопуствующие данные - ID маршрутного листа
добавить поле "введенное время" в таблицу invoice_history

07.12.2015
user из destinationPoint должен видеть складские статусы по своей заявке
нужно делать проверку на то, чтобы нельзя было внести время прибытия в новый пункт равным или меньше предыдущего, часовые пояса.! 

15.12.2015
1. Выводить пользователя, пункт и его роль
2. Сброс фильтров
3. Одному клиент-менеджеру должно соответствовать несколько пунктов (набор его торговых точек)
4. Если маршрутный лист пустой, то не должны меняться статусы маршрутного листа (только накладной)
5. Добавить русские имена статусов в БД.
6. Добавить комментарий при проставлении статуса накладной.
7. добавить кнопку "история статусов" по нажатию - отображать всплывающее окно в котором находится история статусов.

19.12.2015
- 1. Добавить ввод количества паллет при изменении статуса маршрутного листа
+ 2. Во всплывающем окне "История накладной" необходимо добавить названия столбцов
+ 3. Отображать историю статусов в табличном виде
По админке:
Добавить создание расписаний

выпадающий список с возможностью поиска по строкам из направлений(directionName from routes)
S_o  Point     arrivalTime  tLoading  timeToNextPoint distanceToNextPoint 
0    w_point   setByUser    setByUser setByUser       setByUser
1    any_point calculate    setByUser setByUser       setByUser
2    any_point calculate    setByUser setByUser       setByUser
..   any_point calculate    setByUser setByUser       setByUser
n    any_point calculate    setByUser setByUser       setByUser
кнопка сохранить

21.12.2015 
Из описания выше неясно, как должен выглядеть функционал для пользователя, потому предлагаю актуализировать файл GUI.odt - нарисовать желаемый интерфейс и добавить по возможности приблизительное описание действий на странице.

18.01.2016
++ добавить в маршруты дни недели
++ добавить комментарий в invoices and invoice history
-+ сделать новый интерфейс для создания маршрутов

19.01.2016
где отображать комментарий к статусу? сейчас мы его вводим, но нигде не показываем. Показывать статус нужно в табличке с историей статусов

28.01.2016
1) время в пути - 29.01.16
2) обновление страницы - 29.01.16
3) кнопки "обновить" - 29.01.16
4)создать процедуру для select for users - 
5) доработать таблицу с пользователями - добавить туда фильтры, убрать - глобальный фильтр

05.02.2016
1) при возникновении ошибки в базе данных из-за неправильного ввода в форме маршрутов необходимо возвращать объект с ошибкой.
2) исправить взаимную работу таблиц routes and relstionsBetweenRoutes
3) по таблице Users для select - добавить уже готовый запрос selectUsers,
 также релизовать запись, удаление и изменение данных в БД по данных полученным от клиента и реализовать ответ от сервера.
4) исправить ошибку в selectData связанную с наличием более одного параметра в подзапросе
5) при нажатии на изменить статус МЛ, в диалоговое окно добавить набор checkBox с накладными, изначально долны быть выбраны все накладные
6) добавить на главную страницу боковое меню, в нем будет два пункта: статусы заявки, статусы МЛ. Из документа GUI.odt взять поля таблицы МЛ.

19.02.2016
1) исправить баг связанный с переходом между страницами(главная страница)
2) по парсеру - разбить на отдельные классы - transaction script
3) по парсеру - сделать импорт файлов более надежным (асинхронно раз в минуту проверять все файлы)
4) !парсер должен удалять обработанный файл, по итогам работы записывать в другой файл - статус(загрузил или нет)
5) !на сервак установить java 
6) дни, недели + время старта маршрута починить
7) исправить переменование маршрута при повторном заливании данных.

11.03.2016 

1) Количество паллет - выводить - Александр
2) Время прибытия в следующий пункт - (проверить формулу в БД?) - должно быть: факт времени проставления статуса "в транзите" + время транзита из маршрута - Done
3) История - все статусы, включая первый из 1С (парсер) - Сергей
4) Изменение статуса МЛ - выводить накладные этого МЛ (чекбокс, номер, статус) - Александр
5) При добавлении данных о маршруте, проставлять их в существующие накладные - Done


1) ID внутренней заявки - requestID - уникальное
2) Номер внутренней заявки - requstNumber
3) Дата внутренней заявки - requestDate
4) Номер сборочного листа (расходной накладной) - invoiceNumber
5) invoiceDate - дата сборочного листа
6) Номер официального документа - documentNumber
7) Дата официального документа - documentDate
8) firma - "от какой фирмы отгружено (из ГК Энергомикс)" - текстовое поле
9) Склад отгрузки - storage
10) Клиент name
11) Клиент ID
12) Водитель - брать ФИО (водители выгружаются в справочник traders - сотрудники, будет поле с признаком "водитель")
13) Поле "комментарий" из выгрузки 1С

Маршрутные листы и направления:

1) В Маршрутных Листах directId - только для внутриузла. Если не NULL - берется данное направление
2) Если есть в МЛ  pointArrival - то это магистраль
3) Если у нас directID is NULL - то берем откуда и куда как направление (52 и 07 - directID=52MAG07, наименование направления point52-point07)

Отсутствие полей в выгрузке (documentNumber, documentDate,boxNumber,comment) -  в выгрузке будут поля со значением NULL.

В Маршрутном листе pointArrival со значением "00" в выгрузке будет заменено на "99" и создан фиктивный пункт "Ошибка".

Парсер:
сделать обработку нескольких файлов(переименование или еще как-нить)
убрать генерацию паролей, пароли уже есть(для traderId) их нужно будет добавлять вручную.
написать полностью набор ограничений, которым должен соответсвовать JSON файл.

19.03.2016
1) сделать для каждого клиента - юзера с ролью клиент манеджера(CLIENT_MANAGER) и без пункта (парсер)+
2) по парсеру писать резултат работы в разные файлы. +
3) писать время для каждого статуса в истории статусов, + сортировка в истории статусов.
4) количество коробок иногда пропадает.(коробки не импортируются, т.к. их нет в выгрузке)
5) включить настривание столбцов в datatables.

 21.03.2016
 Изменение статуса Маршрутного листа: выводить также номер накладной и текущий статус заявки - Александр
 При изменении статуса МЛ дать возможность заносить также номер ТС
 ФИО пользователя - при добавлении пользователя вручную не появляется в поле ФИО + когда заходим под таким пользователям ФИО также не отображается
В случае, если осуществляется вход под пользователем, для которого нет заявок (диспетчер) - то выдается надпись "Подождите" 

28.03.2016
Александру:
1) в случае, если массив отфильтрованных данных на сервере - пустой, то на стороне php возникает ошибка
Notice: Undefined offset: 0 in C:\web\wamp\www\sbat.logist.ru\common_files\dao\requestsForUser\RequestsForUser.php on line <i>34</i>

29.03.2016
РАБОТЫ ПО ОПТИМИЗАЦИИ
1) настроить файл mysql.ini под наш сервак
2) хранить view как materialized view, в парсере добавить инструкцию для обновления этого view
3) добавить индексы
4) оптимизировать сам запрос, перенести его на уровень php и использовать prepered statement


05.04.2016
Александру:
1) когда отображается список всех показываемых столбцов там есть 2 столбца с троеточием. Это возникает из-за того, что реально наша таблица состоит еще из двух столбцов, но они просто не отображаются.
В этих столбцах Андрей передавал какие-то данные, то ли id заявки то-ли еще что. Datatables имеет 3 формата данных - сущности, массивы и объекты. Соответсвенно нужно передалть передачу данных на объекты и там уже 
передавать данные этих двух столбцов. 
https://datatables.net/manual/data/

2) В datatables есть плагин который хранить состояние таблицы. Я его включил, настроил, но он никак не соединен с сессией пользователя. То есть сейчас например оставил фильтры, перелогинился, а фильтры те-же.
Соответсвенно нужно привязать сохранение состояния таблицы к сессии.
https://datatables.net/reference/option/stateSave

3) По оптимизации. Datatables может работать автономно, если количество записей для данного пользователя не велико. У нас бОльшая часть пользоватей будет иметь ну максимум по тысяче заявок, это означает,
 что мы можем просто высылать раз в час всю эту тысячу и не париться. Единственная проблема, что при этом данные о новом статусе заявки также будут раз в час обновляться.
Processing modes

DataTables has two different modes of processing data (ordering, searching, etc. of data):

    Client-side processing - the full data set is loaded up-front and data processing is done in the browser.
    Server-side processing - an Ajax request is made for every table redraw, with only the data required for each display returned. The data processing is performed on the server.

То есть если данных мало - ма используем Client-side processing, если данных много(а это будет у маленького количества пользователей) мы используем Server-side processing




















